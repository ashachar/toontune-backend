================================================================================
TOONTUNE VIDEO EFFECTS AND ANIMATIONS REFERENCE
================================================================================

================================================================================
EDITING TRICKS (utils/editing_tricks/)
================================================================================

### Color Effects
----------------------------------------
apply_color_splash(input_video: Union[str, Path], target_color: Tuple[int, int, int] = (255, 0, 0), tolerance: float = 30.0, segment_subject: bool = True, output_path: Optional[Union[str, Path]] = None) -> Path
apply_color_splash_to_frame(frame: np.ndarray, target_color: Tuple[int, int, int], tolerance: float, subject_mask: Optional[np.ndarray] = None) -> np.ndarray
apply_selective_color(input_video: Union[str, Path], color_adjustments: List[dict], output_path: Optional[Union[str, Path]] = None) -> Path
apply_selective_color_to_frame(frame: np.ndarray, adjustment: dict) -> np.ndarray

### Text Effects
----------------------------------------
apply_text_behind_subject(input_video: Union[str, Path], text: str, position: Tuple[int, int] = None, font_scale: float = 2.0, font_color: Tuple[int, int, int] = (255, 255, 255), font_thickness: int = 3, segment_foreground: bool = True, output_path: Optional[Union[str, Path]] = None) -> Path
apply_motion_tracking_text(input_video: Union[str, Path], text: str, track_point: Optional[Tuple[int, int]] = None, offset: Tuple[int, int] = (0, -50), font_scale: float = 1.0, font_color: Tuple[int, int, int] = (255, 255, 255), font_thickness: int = 2, background_color: Optional[Tuple[int, int, int]] = (0, 0, 0), output_path: Optional[Union[str, Path]] = None) -> Path
apply_animated_subtitle(input_video: Union[str, Path], subtitles: List[Dict[str, any]], font_scale: float = 1.0, font_color: Tuple[int, int, int] = (255, 255, 255), background_color: Tuple[int, int, int] = (0, 0, 0), animation_type: str = 'fade', output_path: Optional[Union[str, Path]] = None) -> Path
apply_subtitle_animation(frame: np.ndarray, text: str, position: Union[str, Tuple[int, int]], progress: float, animation_type: str, font: int, font_scale: float, font_color: Tuple[int, int, int], bg_color: Tuple[int, int, int]) -> np.ndarray

### Motion Effects
----------------------------------------
apply_floating_effect(input_video: Union[str, Path], amplitude: float = 20.0, frequency: float = 0.5, direction: str = 'vertical', phase_shift: float = 0.0, output_path: Optional[Union[str, Path]] = None) -> Path
apply_smooth_zoom(input_video: Union[str, Path], zoom_factor: float = 1.5, zoom_center: Optional[Tuple[int, int]] = None, zoom_type: str = 'in', easing: str = 'ease_in_out', hold_frames: int = 0, output_path: Optional[Union[str, Path]] = None) -> Path
apply_3d_photo_effect(input_video: Union[str, Path], parallax_strength: float = 30.0, num_layers: int = 5, movement_type: str = 'horizontal', use_depth_estimation: bool = True, output_path: Optional[Union[str, Path]] = None) -> Path
apply_zoom_to_frame(frame: np.ndarray, zoom: float, center: Tuple[int, int]) -> np.ndarray
apply_easing(t: float, easing_type: str) -> float
apply_parallax_effect(frame: np.ndarray, depth_map: np.ndarray, dx: float, dy: float, num_layers: int) -> np.ndarray
apply_rotation_effect(input_video: Union[str, Path], rotation_speed: float = 30.0, rotation_axis: str = 'z', pivot_point: Optional[Tuple[int, int]] = None, output_path: Optional[Union[str, Path]] = None) -> Path
apply_3d_rotation(frame: np.ndarray, angle: float, axis: str, pivot: Tuple[int, int]) -> np.ndarray
apply_dolly_zoom(input_video: Union[str, Path], dolly_speed: float = 0.02, dolly_direction: str = 'in', smooth_acceleration: bool = True, crop_to_original: bool = True, output_path: Optional[Union[str, Path]] = None) -> Path
apply_rack_focus(input_video: Union[str, Path], focus_points: List[Tuple[int, int]], focus_timings: Optional[List[float]] = None, blur_strength: float = 15.0, transition_duration: float = 1.0, use_depth: bool = False, output_path: Optional[Union[str, Path]] = None) -> Path
apply_handheld_shake(input_video: Union[str, Path], shake_intensity: float = 5.0, shake_frequency: float = 2.0, rotation_amount: float = 1.0, smooth_motion: bool = True, output_path: Optional[Union[str, Path]] = None) -> Path
apply_speed_ramp(input_video: Union[str, Path], speed_points: List[Tuple[float, float]], interpolation: str = 'smooth', maintain_duration: bool = False, output_path: Optional[Union[str, Path]] = None) -> Path
apply_bloom_effect(input_video: Union[str, Path], threshold: float = 200, bloom_intensity: float = 1.5, blur_radius: int = 21, color_shift: Optional[Tuple[float, float, float]] = None, output_path: Optional[Union[str, Path]] = None) -> Path
apply_ken_burns(input_image: Union[str, Path], duration: float = 5.0, fps: int = 30, start_scale: float = 1.0, end_scale: float = 1.3, start_position: Optional[Tuple[int, int]] = None, end_position: Optional[Tuple[int, int]] = None, easing: str = 'ease_in_out', output_path: Optional[Union[str, Path]] = None) -> Path
apply_light_sweep(input_video: Union[str, Path], sweep_duration: float = 1.0, sweep_width: int = 100, sweep_angle: float = 45.0, sweep_color: Tuple[int, int, int] = (255, 255, 200), sweep_intensity: float = 0.5, repeat_interval: Optional[float] = None, output_path: Optional[Union[str, Path]] = None) -> Path
apply_selective_blur(frame: np.ndarray, focus_point: Tuple[int, int], max_blur: float, depth_map: Optional[np.ndarray] = None) -> np.ndarray

### Layout Effects
----------------------------------------
apply_highlight_focus(input_video: Union[str, Path], focus_area: Optional[Tuple[int, int, int, int]] = None, blur_strength: int = 21, vignette: bool = True, track_subject: bool = False, output_path: Optional[Union[str, Path]] = None) -> Path
add_progress_bar(input_video: Union[str, Path], bar_height: int = 5, bar_color: Tuple[int, int, int] = (0, 255, 0), background_color: Tuple[int, int, int] = (50, 50, 50), position: str = 'bottom', style: str = 'solid', output_path: Optional[Union[str, Path]] = None) -> Path
apply_video_in_text(input_video: Union[str, Path], text: str, font_scale: float = 10.0, font_thickness: int = 30, position: Optional[Tuple[int, int]] = None, output_path: Optional[Union[str, Path]] = None) -> Path
apply_split_screen(videos: List[Union[str, Path]], layout: str = 'horizontal', border_width: int = 2, border_color: Tuple[int, int, int] = (255, 255, 255), output_path: Optional[Union[str, Path]] = None) -> Path

================================================================================
ANIMATIONS (utils/animations/)
================================================================================

All animation classes inherit from Animation base class.
Common parameters: element_path, background_path, position, duration, fps

### Motion Effects
----------------------------------------
Bounce(element_path: str, background_path: str, position: Tuple[int, int], bounce_height: float = 200, num_bounces: int = 3, bounce_duration: int = 45, bounce_type: str = 'in', gravity: float = 0.8, damping: float = 0.6, squash_stretch: bool = True, direction: float = 0, start_frame: int = 0, animation_start_frame: int = 0, path: Optional[List[Tuple[int, int, int]]] = None, fps: int = 30, duration: float = 7.0, temp_dir: Optional[str] = None, remove_background: bool = True, background_color: str = '0x000000', background_similarity: float = 0.15)
Carousel(element_path: str, background_path: str, position: Tuple[int, int], num_items: int = 6, radius: float = 150, rotation_speed: float = 1.5, tilt_angle: float = 15, perspective_scale: bool = True, fade_back: bool = True, vertical_carousel: bool = False, oscillate: bool = False, item_rotation: bool = True, direction: float = 0, start_frame: int = 0, animation_start_frame: int = 0, path: Optional[List[Tuple[int, int, int]]] = None, fps: int = 30, duration: float = 7.0, temp_dir: Optional[str] = None, remove_background: bool = True, background_color: str = '0x000000', background_similarity: float = 0.15)
DepthZoom(element_path: str, background_path: str, position: Tuple[int, int], zoom_type: str = 'approach', start_depth: float = -5, end_depth: float = 2, focal_length: float = 50, depth_blur: bool = True, motion_blur: bool = True, parallax_layers: int = 0, fog_effect: bool = True, camera_shake: bool = False, direction: float = 0, start_frame: int = 0, animation_start_frame: int = 0, path: Optional[List[Tuple[int, int, int]]] = None, fps: int = 30, duration: float = 7.0, temp_dir: Optional[str] = None, remove_background: bool = True, background_color: str = '0x000000', background_similarity: float = 0.15)
EmergenceFromStaticPoint(element_path: str, background_path: str, position: Tuple[int, int], direction: float = 0, start_frame: int = 0, animation_start_frame: int = 0, path: Optional[List[Tuple[int, int, int]]] = None, fps: int = 30, duration: float = 7.0, temp_dir: Optional[str] = None, emergence_speed: float = 1.0, remove_background: bool = True, background_color: str = '0x000000', background_similarity: float = 0.15)
Roll(element_path: str, background_path: str, position: Tuple[int, int], roll_direction: str = 'right', roll_type: str = 'in', roll_duration: int = 45, rotations: float = 2.0, bounce_effect: bool = True, bounce_amplitude: float = 10, easing: str = 'ease_out', deformation: bool = True, direction: float = 0, start_frame: int = 0, animation_start_frame: int = 0, path: Optional[List[Tuple[int, int, int]]] = None, fps: int = 30, duration: float = 7.0, temp_dir: Optional[str] = None, remove_background: bool = True, background_color: str = '0x000000', background_similarity: float = 0.15)
Rotate3D(element_path: str, background_path: str, position: Tuple[int, int], rotation_axis: str = 'y', rotation_speed: float = 2.0, perspective_distance: float = 500, lighting: bool = True, depth_blur: bool = True, wobble: bool = False, rotation_direction: str = 'forward', direction: float = 0, start_frame: int = 0, animation_start_frame: int = 0, path: Optional[List[Tuple[int, int, int]]] = None, fps: int = 30, duration: float = 7.0, temp_dir: Optional[str] = None, remove_background: bool = True, background_color: str = '0x000000', background_similarity: float = 0.15)
Spin(element_path: str, background_path: str, position: Tuple[int, int], spin_degrees: float = 360, spin_duration: int = 30, spin_type: str = 'in', spin_direction: str = 'clockwise', easing: str = 'linear', scale_during_spin: bool = True, scale_factor: float = 0.8, motion_blur: bool = False, direction: float = 0, start_frame: int = 0, animation_start_frame: int = 0, path: Optional[List[Tuple[int, int, int]]] = None, fps: int = 30, duration: float = 7.0, temp_dir: Optional[str] = None, remove_background: bool = True, background_color: str = '0x000000', background_similarity: float = 0.15)
Warp(element_path: str, background_path: str, position: Tuple[int, int], warp_type: str = 'rubber', warp_intensity: float = 0.5, warp_center: Optional[Tuple[int, int]] = None, warp_radius: float = 100, oscillate: bool = True, frequency: float = 1.0, randomize: bool = False, direction: float = 0, start_frame: int = 0, animation_start_frame: int = 0, path: Optional[List[Tuple[int, int, int]]] = None, fps: int = 30, duration: float = 7.0, temp_dir: Optional[str] = None, remove_background: bool = True, background_color: str = '0x000000', background_similarity: float = 0.15)
Wave(element_path: str, background_path: str, position: Tuple[int, int], wave_type: str = 'horizontal', wave_amplitude: float = 20, wave_frequency: float = 2.0, wave_speed: float = 1.0, wave_direction: str = 'forward', damping: float = 0.0, phase_offset: float = 0.0, distort_edges: bool = True, direction: float = 0, start_frame: int = 0, animation_start_frame: int = 0, path: Optional[List[Tuple[int, int, int]]] = None, fps: int = 30, duration: float = 7.0, temp_dir: Optional[str] = None, remove_background: bool = True, background_color: str = '0x000000', background_similarity: float = 0.15)

### Transition Effects
----------------------------------------
FadeIn(element_path: str, background_path: str, position: Tuple[int, int], center_point: Optional[Tuple[int, int]] = None, fade_speed: float = 0.05, direction: float = 0, start_frame: int = 0, animation_start_frame: int = 0, path: Optional[List[Tuple[int, int, int]]] = None, fps: int = 30, duration: float = 7.0, temp_dir: Optional[str] = None, remove_background: bool = True, background_color: str = '0x000000', background_similarity: float = 0.15)
FadeOut(element_path: str, background_path: str, position: Tuple[int, int], center_point: Optional[Tuple[int, int]] = None, fade_speed: float = 0.05, fade_start_frame: int = 0, direction: float = 0, start_frame: int = 0, animation_start_frame: int = 0, path: Optional[List[Tuple[int, int, int]]] = None, fps: int = 30, duration: float = 7.0, temp_dir: Optional[str] = None, remove_background: bool = True, background_color: str = '0x000000', background_similarity: float = 0.15)
Flip(element_path: str, background_path: str, position: Tuple[int, int], flip_axis: str = 'horizontal', flip_duration: int = 30, flip_direction: str = 'forward', flip_type: str = 'in', num_flips: float = 1.0, perspective_strength: float = 0.7, show_back: bool = False, direction: float = 0, start_frame: int = 0, animation_start_frame: int = 0, path: Optional[List[Tuple[int, int, int]]] = None, fps: int = 30, duration: float = 7.0, temp_dir: Optional[str] = None, remove_background: bool = True, background_color: str = '0x000000', background_similarity: float = 0.15)
SlideIn(element_path: str, background_path: str, position: Tuple[int, int], slide_direction: str = 'left', slide_duration: int = 30, easing: str = 'ease_out', overshoot: float = 0.0, direction: float = 0, start_frame: int = 0, animation_start_frame: int = 0, path: Optional[List[Tuple[int, int, int]]] = None, fps: int = 30, duration: float = 7.0, temp_dir: Optional[str] = None, remove_background: bool = True, background_color: str = '0x000000', background_similarity: float = 0.15)
SlideOut(element_path: str, background_path: str, position: Tuple[int, int], slide_direction: str = 'right', slide_duration: int = 30, slide_start_frame: int = 0, easing: str = 'ease_in', direction: float = 0, start_frame: int = 0, animation_start_frame: int = 0, path: Optional[List[Tuple[int, int, int]]] = None, fps: int = 30, duration: float = 7.0, temp_dir: Optional[str] = None, remove_background: bool = True, background_color: str = '0x000000', background_similarity: float = 0.15)
ZoomIn(element_path: str, background_path: str, position: Tuple[int, int], start_scale: float = 0.0, end_scale: float = 1.0, zoom_duration: int = 20, zoom_center: Optional[Tuple[int, int]] = None, easing: str = 'ease_out', rotation_during_zoom: float = 0, direction: float = 0, start_frame: int = 0, animation_start_frame: int = 0, path: Optional[List[Tuple[int, int, int]]] = None, fps: int = 30, duration: float = 7.0, temp_dir: Optional[str] = None, remove_background: bool = True, background_color: str = '0x000000', background_similarity: float = 0.15)
ZoomOut(element_path: str, background_path: str, position: Tuple[int, int], start_scale: float = 1.0, end_scale: float = 0.0, zoom_duration: int = 20, zoom_start_frame: int = 0, zoom_center: Optional[Tuple[int, int]] = None, easing: str = 'ease_in', rotation_during_zoom: float = 0, direction: float = 0, start_frame: int = 0, animation_start_frame: int = 0, path: Optional[List[Tuple[int, int, int]]] = None, fps: int = 30, duration: float = 7.0, temp_dir: Optional[str] = None, remove_background: bool = True, background_color: str = '0x000000', background_similarity: float = 0.15)

### Visual Effects
----------------------------------------
Glitch(element_path: str, background_path: str, position: Tuple[int, int], glitch_intensity: float = 0.5, glitch_frequency: float = 0.3, glitch_duration: int = 3, rgb_shift: bool = True, scan_lines: bool = True, pixel_sort: bool = True, color_invert: bool = True, displacement: bool = True, noise: bool = True, glitch_pattern: str = 'random', direction: float = 0, start_frame: int = 0, animation_start_frame: int = 0, path: Optional[List[Tuple[int, int, int]]] = None, fps: int = 30, duration: float = 7.0, temp_dir: Optional[str] = None, remove_background: bool = True, background_color: str = '0x000000', background_similarity: float = 0.15)
LensFlare(element_path: str, background_path: str, position: Tuple[int, int], flare_type: str = 'anamorphic', flare_position: Optional[Tuple[int, int]] = None, flare_intensity: float = 1.0, flare_color: str = '#FFFF88', num_artifacts: int = 5, movement: bool = True, rainbow_effect: bool = True, bloom: bool = True, flicker: bool = False, direction: float = 0, start_frame: int = 0, animation_start_frame: int = 0, path: Optional[List[Tuple[int, int, int]]] = None, fps: int = 30, duration: float = 7.0, temp_dir: Optional[str] = None, remove_background: bool = True, background_color: str = '0x000000', background_similarity: float = 0.15)
NeonGlow(element_path: str, background_path: str, position: Tuple[int, int], glow_color: str = '#00FF00', glow_intensity: float = 0.8, glow_radius: int = 10, pulse: bool = True, pulse_speed: float = 1.0, edge_detect: bool = True, multi_color: bool = False, flicker: bool = True, direction: float = 0, start_frame: int = 0, animation_start_frame: int = 0, path: Optional[List[Tuple[int, int, int]]] = None, fps: int = 30, duration: float = 7.0, temp_dir: Optional[str] = None, remove_background: bool = True, background_color: str = '0x000000', background_similarity: float = 0.15)
Particles(element_path: str, background_path: str, position: Tuple[int, int], particle_type: str = 'sparkles', num_particles: int = 50, particle_size: float = 0.03, particle_direction: str = 'up', particle_speed: float = 1.0, formation_type: str = 'dissolve', color_variation: bool = True, glow_effect: bool = True, turbulence: float = 0.3, direction: float = 0, start_frame: int = 0, animation_start_frame: int = 0, path: Optional[List[Tuple[int, int, int]]] = None, fps: int = 30, duration: float = 7.0, temp_dir: Optional[str] = None, remove_background: bool = True, background_color: str = '0x000000', background_similarity: float = 0.15)
Shatter(element_path: str, background_path: str, position: Tuple[int, int], shatter_type: str = 'glass', num_pieces: int = 16, shatter_point: Optional[Tuple[int, int]] = None, explosion_force: float = 1.0, gravity: float = 0.5, rotation_speed: float = 1.0, fade_fragments: bool = True, shatter_delay: int = 0, direction: float = 0, start_frame: int = 0, animation_start_frame: int = 0, path: Optional[List[Tuple[int, int, int]]] = None, fps: int = 30, duration: float = 7.0, temp_dir: Optional[str] = None, remove_background: bool = True, background_color: str = '0x000000', background_similarity: float = 0.15)

### Text Effects
----------------------------------------
SplitText(element_path: str, background_path: str, position: Tuple[int, int], text: Optional[str] = None, split_mode: str = 'word', split_direction: str = 'horizontal', split_timing: str = 'simultaneous', split_distance: int = 200, rotation_on_split: bool = True, fade_on_split: bool = False, rejoin: bool = False, font_size: int = 48, font_color: str = '#FFFFFF', direction: float = 0, start_frame: int = 0, animation_start_frame: int = 0, path: Optional[List[Tuple[int, int, int]]] = None, fps: int = 30, duration: float = 7.0, temp_dir: Optional[str] = None)
Typewriter(element_path: str, background_path: str, position: Tuple[int, int], text: Optional[str] = None, font_size: int = 48, font_color: str = '#FFFFFF', typing_speed: int = 2, cursor_visible: bool = True, cursor_blink_rate: int = 15, text_position: Optional[Tuple[int, int]] = None, sound_effect: bool = False, line_height: float = 1.2, direction: float = 0, start_frame: int = 0, animation_start_frame: int = 0, path: Optional[List[Tuple[int, int, int]]] = None, fps: int = 30, duration: float = 7.0, temp_dir: Optional[str] = None)
WordBuildup(element_path: str, background_path: str, position: Tuple[int, int], text: Optional[str] = None, buildup_mode: str = 'fade', word_delay: int = 5, entrance_direction: str = 'bottom', emphasis_effect: bool = True, hold_duration: int = 30, font_size: int = 48, font_color: str = '#FFFFFF', highlight_color: str = '#FFFF00', alignment: str = 'center', direction: float = 0, start_frame: int = 0, animation_start_frame: int = 0, path: Optional[List[Tuple[int, int, int]]] = None, fps: int = 30, duration: float = 7.0, temp_dir: Optional[str] = None)

### Transform Effects
----------------------------------------
Skew(element_path: str, background_path: str, position: Tuple[int, int], skew_type: str = 'horizontal', skew_angle: float = 30, oscillate: bool = True, frequency: float = 1.0, easing: str = 'sine', anchor_point: str = 'center', direction: float = 0, start_frame: int = 0, animation_start_frame: int = 0, path: Optional[List[Tuple[int, int, int]]] = None, fps: int = 30, duration: float = 7.0, temp_dir: Optional[str] = None, remove_background: bool = True, background_color: str = '0x000000', background_similarity: float = 0.15)
StretchSquash(element_path: str, background_path: str, position: Tuple[int, int], deform_type: str = 'elastic', intensity: float = 0.5, frequency: float = 1.0, axis: str = 'vertical', preserve_volume: bool = True, anticipation: bool = True, follow_through: bool = True, easing: str = 'elastic', direction: float = 0, start_frame: int = 0, animation_start_frame: int = 0, path: Optional[List[Tuple[int, int, int]]] = None, fps: int = 30, duration: float = 7.0, temp_dir: Optional[str] = None, remove_background: bool = True, background_color: str = '0x000000', background_similarity: float = 0.15)

================================================================================
SUMMARY
================================================================================
Total Editing Effects: 28
Total Animation Classes: 27
Grand Total: 55 effects

================================================================================
END OF EFFECTS REFERENCE
================================================================================